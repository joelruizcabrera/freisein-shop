monolog:
    handlers:
        main:
            type: fingers_crossed
            action_level: error
            handler: nested
            excluded_http_codes: [404, 405]
            buffer_size: 30 # How many messages should be saved? Prevent memory leaks
        business_event_handler_buffer:
            level: error
        nested:
            type: rotating_file
            path: "%kernel.logs_dir%/%kernel.environment%.log"
            level: error
        console:
            type: console
            process_psr_3_messages: false
            channels: ["!event", "!doctrine"]
        # https://symfony.com/doc/current/logging/monolog_email.html
        # The "mail_handler" of type "fingers_crossed" only triggers when "action_level" is reached.
        # If this level is reached it will log all messages regardless of their level.
        # the "handler"-setting means that the output of this handler is passed to the
        # "deduplicated handler.
        mail_handler:
            priority: 5
            type: fingers_crossed
            # Trigger for level >= 400 but ignore not 404 errors.
            action_level: error
            excluded_http_codes: [404]
            handler: deduplicated
            # This prevents that when "symfony_mailer" level is "debug" every time a second mail with
            # debug-data from the mail-channel ist send.
            # See: https://stackoverflow.com/questions/67702288/monolog-send-error-logs-by-mail-causes-an-extra-mail-for-every-error-sent
            channels: ["!mailer"]
        # The "deduplicated" handler is a nested handler because its used as "handler" for the "mail_handler" handler
        # and is therefore never triggered directly. It only processes data from the "mail_handler" handler.
        # Because its from type "deduplicated" it means it keeps all unique messages over a given
        # period (60 seconds by default) and then passed them to the specified "handler" in one go.
        deduplicated:
            nested: true
            type: deduplication
            handler: symfony_mailer
        # The "symfony_mailer" handler is a nested handler because its used as "handler" for the "deduplicated" handler
        # and is therefore never triggered directly. It only processes data from the "deduplicated" handler.
        symfony_mailer:
            nested: true
            type: symfony_mailer
            email_prototype:
                id: Shopware\Production\Logging\ErrorMail\ErrorMail
                method: create
            level: debug
            formatter: monolog.formatter.html
            content_type: text/html
